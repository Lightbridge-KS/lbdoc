% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/md_to_df_str.R
\name{read_md_to_df_str}
\alias{read_md_to_df_str}
\title{Read Markdown File and Convert to a Structured DataFrame}
\usage{
read_md_to_df_str(
  file,
  summarize = TRUE,
  collapse = ", ",
  readLines_args = list()
)
}
\arguments{
\item{file}{A character string naming a file, a connection, or literal data (either a
single string or a raw vector) to be read.}

\item{summarize}{Logical, if \code{TRUE}, content under each heading is summarized into a single
cell per heading level; if \code{FALSE}, each line retains its own row in the output DataFrame.}

\item{collapse}{The string to use when collapsing multiple lines of content under
each heading when \code{summarize = TRUE}.}

\item{readLines_args}{A list of additional arguments to pass to \code{readLines()}. This can include
any parameter that \code{readLines} accepts like \code{encoding}, etc.}
}
\value{
A \code{data.frame} where each row corresponds to a heading or content line. If
\code{summarize} is \code{TRUE}, each heading level is condensed into a single entry. The columns
of the DataFrame represent the hierarchical levels (headings) and the content under these headings.
}
\description{
Reads a Markdown file using \code{readLines} and parses the content into a structured
DataFrame based on the Markdown headings. The function allows optional aggregation
of content under each heading and flexible reading of files with additional \code{readLines} arguments.
}
\examples{
# Read a local Markdown file and convert to a DataFrame
# df <- read_md_to_df_str("path/to/your/file.md")

# Read a Markdown file with content summarization disabled
# df <- read_md_to_df_str("path/to/your/file.md", summarize = FALSE)

# Read a Markdown file with specific encoding
# df <- read_md_to_df_str("path/to/your/file.md", readLines_args = list(encoding = "UTF-8"))

}
